#!/bin/sh

accepted_person_ids="select DISTINCT person_id from person_proposal_map, proposal  where accepted = 't' and person_proposal_map.proposal_id = proposal.id"
number_regos="SELECT COUNT(type) FROM registration,person,account WHERE person.id = registration.person_id AND account.id = person.account_id AND person.id not in ($accepted_person_ids)"

psql -c "select person.id, person.firstname, person.lastname, account.email_address from person, account, registration where person.id = registration.person_id and account.id = person.account_id and person.id not in ($accepted_person_ids)"

psql -c "
SELECT 
      count(id) as paid, SUM(amount)/100 as dollars 
FROM 
      payment_received
WHERE
      status='Accepted' and result = 'OK' and ip_address='203.192.130.110';
"

psql -c "
SELECT 
	type, COUNT(type) as number, COUNT(type)*100/($number_regos) AS percent
FROM
	registration, person, account
WHERE
	person.id = registration.person_id
	AND
	account.id = person.account_id
	AND
	person.id not in ($accepted_person_ids)
GROUP BY
	type
"

psql -c "SELECT accommodation_location.name, COUNT(accommodation_location.name) from registration, accommodation_location, accommodation_option WHERE registration.accommodation_option_id = accommodation_option.id AND accommodation_option.accommodation_location_id = accommodation_location.id GROUP BY accommodation_location.name;"

echo -e "$(psql -tc "select COUNT(person.id) where person.id = registration.person_id and account.id = person.account_id and  person.id in  ($accepted_person_ids)") of $(psql -tc "select COUNT(person_id) from person_proposal_map, proposal  where accepted = 't' and person_proposal_map.proposal_id = proposal.id") speakers registered.\n"
echo -e "$(psql -tc "select sum(dinner) from registration;") extra dinners.\n"

psql -c "select teesize, count(*) as ordered, count(*) * 100 / (select count(*) from registration) as percent from registration group by teesize order by ordered;"

psql -c "select count(registration.country) as delegates, registration.country where registration.id = rego_invoice_payment.rego and rego_invoice_payment.payment is not null group by country order by delegates desc;"
